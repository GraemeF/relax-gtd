<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Gallio.UI</name>
  </assembly>
  <members>
    <member name="T:Gallio.UI.Common.Policies.IUnhandledExceptionPolicy">
      <summary>
             Wrapper for static UnhandledExceptionPolicy class (to improve testability).
            </summary>
    </member>
    <member name="M:Gallio.UI.Common.Policies.IUnhandledExceptionPolicy.Report(System.String,System.Exception)">
      <summary>
            Reports an unhandled exception.
            </summary>
      <param name="message">A message to explain how the exception was intercepted.</param>
      <param name="unhandledException">The unhandled exception.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="message" /> or 
            <paramref name="unhandledException" /> is null.</exception>
    </member>
    <member name="T:Gallio.UI.Common.Policies.UnhandledExceptionPolicy">
      <summary>
                    Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.
                </summary>
    </member>
    <member name="M:Gallio.UI.Common.Policies.UnhandledExceptionPolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.Common.Policies.UnhandledExceptionPolicy" /> class</summary>
    </member>
    <member name="M:Gallio.UI.Common.Policies.UnhandledExceptionPolicy.Report(System.String,System.Exception)">
      <summary>
            Reports an unhandled exception.
            </summary>
      <param name="message">A message to explain how the exception was intercepted.</param>
      <param name="unhandledException">The unhandled exception.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="message" /> or 
            <paramref name="unhandledException" /> is null.</exception>
    </member>
    <member name="T:Gallio.UI.Common.Synchronization.SynchronizationContext">
      <summary>
             Holder for the current sync context (e.g. the winforms current).
            </summary>
    </member>
    <member name="M:Gallio.UI.Common.Synchronization.SynchronizationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.Common.Synchronization.SynchronizationContext" /> class</summary>
    </member>
    <member name="P:Gallio.UI.Common.Synchronization.SynchronizationContext.Current">
      <summary>
             Returns a shared SynchronizationContext instance.
            </summary>
    </member>
    <member name="M:Gallio.UI.Common.Synchronization.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>
            Wrapper for Post on the shared sync context.
            </summary>
      <param name="sendOrPostCallback">The SendOrPostCallback delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
    </member>
    <member name="M:Gallio.UI.Common.Synchronization.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>
            Wrapper for Send on the shared sync context.
            </summary>
      <param name="sendOrPostCallback">The SendOrPostCallback delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
    </member>
    <member name="T:Gallio.UI.ControlPanel.ControlPanelPresenter">
      <summary>
            Presents the control panel dialog.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.ControlPanelPresenter.#ctor(Gallio.Runtime.Extensibility.ComponentHandle{Gallio.UI.ControlPanel.IControlPanelTabProvider,Gallio.UI.ControlPanel.ControlPanelTabProviderTraits}[],Gallio.Runtime.Security.IElevationManager)">
      <summary>
            Creates a control panel presenter.
            </summary>
      <param name="controlPanelTabProviderHandles">The preference page provider handles, not null.</param>
      <param name="elevationManager">The elevation manager, not null.</param>
    </member>
    <member name="M:Gallio.UI.ControlPanel.ControlPanelPresenter.Show(System.Windows.Forms.IWin32Window)">
      <summary>
            Shows the control panel dialog.
            </summary>
      <param name="owner">The dialog owner control.</param>
      <returns>The dialog result, either <see cref="F:System.Windows.Forms.DialogResult.OK" />
            or <see cref="F:System.Windows.Forms.DialogResult.Cancel" /> depending on how the dialog
            was closed.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.ControlPanelTab">
      <summary>
            Base class for components that present control panel tabs.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.ControlPanelTab.#ctor">
      <summary>
            Creates a control panel tab.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.ControlPanelTab.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:Gallio.UI.ControlPanel.ControlPanelTabProviderTraits">
      <summary>
            Describes the traits of a <see cref="T:Gallio.UI.ControlPanel.IControlPanelTabProvider" />.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.ControlPanelTabProviderTraits.#ctor(System.String)">
      <summary>
            Creates a traits object for a control panel tab provider.
            </summary>
      <param name="name">The control panel tab name.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="name" /> is empty.</exception>
    </member>
    <member name="P:Gallio.UI.ControlPanel.ControlPanelTabProviderTraits.Name">
      <summary>
            Gets the control panel tab name.
            </summary>
    </member>
    <member name="P:Gallio.UI.ControlPanel.ControlPanelTabProviderTraits.Order">
      <summary>
            Gets or sets an integer index used to sort control panel tabs in ascending order.
            </summary>
    </member>
    <member name="T:Gallio.UI.ControlPanel.IControlPanelPresenter">
      <summary>
            Presents the control panel dialog.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.IControlPanelPresenter.Show(System.Windows.Forms.IWin32Window)">
      <summary>
            Shows the control panel dialog.
            </summary>
      <param name="owner">The dialog owner control.</param>
      <returns>The dialog result, either <see cref="F:System.Windows.Forms.DialogResult.OK" />
            or <see cref="F:System.Windows.Forms.DialogResult.Cancel" /> depending on how the dialog
            was closed.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.IControlPanelTabProvider">
      <summary>
            Provides a preference pane to be incorporated into the Gallio control panel.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.IControlPanelTabProvider.CreateControlPanelTab">
      <summary>
            Creates a control panel tab to include in the control panel.
            </summary>
      <returns>The control panel tab.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.SettingsEditor">
      <summary>
            Base class for user controls for editing settings with deferred application.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.SettingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.ControlPanel.SettingsEditor" /> class</summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.SettingsEditor.ApplyPendingSettingsChanges(Gallio.Runtime.Security.IElevationContext,Gallio.Runtime.ProgressMonitoring.IProgressMonitor)">
      <summary>
            Applies pending settings changes.
            </summary>
      <param name="elevationContext">An elevation context when <see cref="P:Gallio.UI.ControlPanel.SettingsEditor.RequiresElevation" />
            is true, otherwise null.</param>
      <param name="progressMonitor">The progress monitor, not null.</param>
    </member>
    <member name="M:Gallio.UI.ControlPanel.SettingsEditor.OnPendingSettingsChangesChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="P:Gallio.UI.ControlPanel.SettingsEditor.PendingSettingsChanges" /> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Gallio.UI.ControlPanel.SettingsEditor.OnRequiresElevationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Gallio.UI.ControlPanel.SettingsEditor.RequiresElevationChanged" /> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Gallio.UI.ControlPanel.SettingsEditor.PendingSettingsChanges">
      <summary>
            Gets or sets whether there are pending settings changes yet to be applied.
            </summary>
    </member>
    <member name="E:Gallio.UI.ControlPanel.SettingsEditor.PendingSettingsChangesChanged">
      <summary>
            Event raised when the value of <see cref="P:Gallio.UI.ControlPanel.SettingsEditor.PendingSettingsChanges" /> changes.
            </summary>
    </member>
    <member name="P:Gallio.UI.ControlPanel.SettingsEditor.RequiresElevation">
      <summary>
            Gets or sets whether elevation will be required to apply pending modifications.
            </summary>
    </member>
    <member name="E:Gallio.UI.ControlPanel.SettingsEditor.RequiresElevationChanged">
      <summary>
            Event raised when the value of <see cref="P:Gallio.UI.ControlPanel.SettingsEditor.RequiresElevation" /> changes.
            </summary>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Plugins.PluginControlPanelTabProvider">
      <summary>
            A control panel tab for managing installed plugins.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Plugins.PluginControlPanelTabProvider.#ctor(Gallio.Runtime.Extensibility.IRegistry)">
      <summary>
            Creates a control panel tab for managing installed plugins.
            </summary>
      <param name="registry">The plugin registry, not null.</param>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Plugins.PluginControlPanelTabProvider.CreateControlPanelTab">
      <summary>
            Creates a control panel tab to include in the control panel.
            </summary>
      <returns>The control panel tab.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.IPreferencePaneProvider">
      <summary>
            Provides a preference pane to be incorporated into the Gallio control panel.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.IPreferencePaneProvider.CreatePreferencePane">
      <summary>
            Creates a preference pane to include in the control panel.
            </summary>
      <returns>The preference pane.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.PlaceholderPreferencePaneProvider">
      <summary>
            A preference pane provider that is used as an empty placeholder for a
            non-leaf node in the preference pane tree.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PlaceholderPreferencePaneProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.ControlPanel.Preferences.PlaceholderPreferencePaneProvider" /> class</summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PlaceholderPreferencePaneProvider.CreatePreferencePane">
      <summary>
            Creates a preference pane to include in the control panel.
            </summary>
      <returns>The preference pane.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.PreferenceControlPanelTabProvider">
      <summary>
            Provides the preferences control panel tab.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PreferenceControlPanelTabProvider.#ctor(Gallio.Runtime.Extensibility.ComponentHandle{Gallio.UI.ControlPanel.Preferences.IPreferencePaneProvider,Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits}[])">
      <summary>
            Creates a control panel tab provider for preference panes.
            </summary>
      <param name="preferencePaneProviderHandles">The preference page provider handles, not null.</param>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PreferenceControlPanelTabProvider.CreateControlPanelTab">
      <summary>
            Creates a control panel tab to include in the control panel.
            </summary>
      <returns>The control panel tab.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.PreferencePane">
      <summary>
            Base class for components that present preference panels.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PreferencePane.#ctor">
      <summary>
            Creates a preference pane.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PreferencePane.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits">
      <summary>
            Describes the traits of a <see cref="T:Gallio.UI.ControlPanel.Preferences.IPreferencePaneProvider" />.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits.#ctor(System.String)">
      <summary>
            Creates a traits object for a preference pane provider.
            </summary>
      <param name="path">The preference pane path consisting of slash-delimited name segments
            specifying tree nodes.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">Thrown if <paramref name="path" /> is empty.</exception>
    </member>
    <member name="P:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits.Icon">
      <summary>
            Gets or sets an icon (16x16) for the preference pane, or null if none.
            </summary>
    </member>
    <member name="P:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits.Order">
      <summary>
            Gets or sets an integer index used to sort control panel tabs in ascending order.
            </summary>
    </member>
    <member name="P:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits.Path">
      <summary>
            Gets the preference pane path consisting of slash-delimited name segments
            specifying tree nodes.
            </summary>
    </member>
    <member name="P:Gallio.UI.ControlPanel.Preferences.PreferencePaneProviderTraits.Scope">
      <summary>
            Gets or sets a value that describes the scope of the changes effected by a preference pane.
            </summary>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.PreferencePaneScope">
      <summary>
            Specifies the scope of the changes effected by a preference pane.
            </summary>
    </member>
    <member name="F:Gallio.UI.ControlPanel.Preferences.PreferencePaneScope.User">
      <summary>
            Changes affect the current user only.
            </summary>
    </member>
    <member name="F:Gallio.UI.ControlPanel.Preferences.PreferencePaneScope.Machine">
      <summary>
            Changes affect all users of the machine.
            </summary>
    </member>
    <member name="M:Gallio.Runtime.Formatting.FormatterExtensions.Format(System.Object)">
      <summary>
            Formats an object using the default <see cref="T:Gallio.Runtime.Formatting.IFormatter" />.
            </summary>
    </member>
    <member name="M:Gallio.Runtime.Formatting.FormatterExtensions.Format(System.Object,Gallio.Runtime.Formatting.IFormatter)">
      <summary>
            Formats an object using the specified <see cref="T:Gallio.Runtime.Formatting.IFormatter" />.
            </summary>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneCommitterElevatedCommand">
      <summary>
            Applies changes made by the <see cref="T:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePane" />.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneCommitterElevatedCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneCommitterElevatedCommand" /> class</summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneCommitterElevatedCommand.Execute(Gallio.Runtime.InstallationConfiguration,Gallio.Runtime.ProgressMonitoring.IProgressMonitor)">
      <summary>
            Executes the command.
            </summary>
      <param name="arguments">The command arguments.</param>
      <param name="progressMonitor">The progress monitor, non-null.</param>
      <returns>The command result, must be null or serializable.</returns>
    </member>
    <member name="T:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneProvider">
      <summary>
            Provides the preference pane for the Gallio runtime paths.
            </summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneProvider" /> class</summary>
    </member>
    <member name="M:Gallio.UI.ControlPanel.Preferences.RuntimePreferencePaneProvider.CreatePreferencePane">
      <summary>
            Creates a preference pane to include in the control panel.
            </summary>
      <returns>The preference pane.</returns>
    </member>
    <member name="T:Gallio.UI.Controls.CommandToolStripMenuItem">
      <summary>
            Extends the win forms ToolStripMenuItem to wrap a MenuCommand.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.CommandToolStripMenuItem.#ctor(Gallio.UI.Menus.MenuCommand)">
      <summary>
             Constructor providing a menu command.
            </summary>
      <param name="command">The command to use.</param>
    </member>
    <member name="M:Gallio.UI.Controls.CommandToolStripMenuItem.#ctor(Gallio.UI.Menus.MenuCommand,Gallio.UI.ProgressMonitoring.ITaskManager)">
      <summary>
            Constructor providing a command and task manager.
            </summary>
      <param name="command">The command to use.</param>
      <param name="taskManager">The task manager to use.</param>
    </member>
    <member name="M:Gallio.UI.Controls.CommandToolStripMenuItem.#ctor(Gallio.UI.Menus.MenuCommand,Gallio.UI.ProgressMonitoring.ITaskManager,Gallio.UI.Controls.IKeysParser)">
      <summary>
             Constructor providing a command, task manager and keys parser.
            </summary>
      <param name="command">The command to use.</param>
      <param name="taskManager">The task manager to use.</param>
      <param name="keysParser">The keys parser to use.</param>
    </member>
    <member name="T:Gallio.UI.Controls.IKeysParser">
      <summary>
             Parses a string representation of a <see cref="T:System.Windows.Forms.Keys" /> enum.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.IKeysParser.Parse(System.String)">
      <summary>
             Parses a string representation of a <see cref="T:System.Windows.Forms.Keys" /> enum.
            </summary>
      <param name="shortcut">The shortcut string to parse.</param>
      <returns>A <see cref="T:System.Windows.Forms.Keys" /> enum.</returns>
    </member>
    <member name="T:Gallio.UI.Controls.KeysParser">
      <summary>
                    Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.
                </summary>
    </member>
    <member name="M:Gallio.UI.Controls.KeysParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.Controls.KeysParser" /> class</summary>
    </member>
    <member name="M:Gallio.UI.Controls.KeysParser.Parse(System.String)">
      <summary>
             Parses a string representation of a <see cref="T:System.Windows.Forms.Keys" /> enum.
            </summary>
      <param name="shortcut">The shortcut string to parse.</param>
      <returns>A <see cref="T:System.Windows.Forms.Keys" /> enum.</returns>
    </member>
    <member name="T:Gallio.UI.Controls.ShieldButton">
      <summary>
            An extension of the Button class that displays the "Shield" icon when
            privilege elevation is required.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.ShieldButton.#ctor">
      <summary>
            Creates a shield button.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.ShieldButton.OnShieldChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Gallio.UI.Controls.ShieldButton.ShieldChanged" /> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Gallio.UI.Controls.ShieldButton.Shield">
      <summary>
            Gets or sets whether the shield icon should be displayed.
            </summary>
    </member>
    <member name="E:Gallio.UI.Controls.ShieldButton.ShieldChanged">
      <summary>
            An event raised when the value of <see cref="P:Gallio.UI.Controls.ShieldButton.Shield" /> has changed.
            </summary>
    </member>
    <member name="T:Gallio.UI.Controls.ToolStripButton">
      <summary>
            Sub-class of <see cref="T:System.Windows.Forms.ToolStripButton">ToolStripButton</see>, 
            making databinding easier.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.ToolStripButton.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.Controls.ToolStripButton" /> class</summary>
    </member>
    <member name="P:Gallio.UI.Controls.ToolStripButton.BindingContext">
      <summary>
            Gets or sets the collection of currency managers for the IBindableComponent.
            </summary>
    </member>
    <member name="P:Gallio.UI.Controls.ToolStripButton.DataBindings">
      <summary>
            Gets the collection of data-binding objects for this IBindableComponent.
            </summary>
    </member>
    <member name="T:Gallio.UI.Controls.ToolStripMenuItem">
      <summary>
            Sub-class of <see cref="T:System.Windows.Forms.ToolStripMenuItem">ToolStripMenuItem</see>, 
            making databinding easier.
            </summary>
    </member>
    <member name="M:Gallio.UI.Controls.ToolStripMenuItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Gallio.UI.Controls.ToolStripMenuItem" /> class</summary>
    </member>
    <member name="P:Gallio.UI.Controls.ToolStripMenuItem.BindingContext">
      <summary>
            Gets or sets the collection of currency managers for the IBindableComponent.
            </summary>
    </member>
    <member name="P:Gallio.UI.Controls.ToolStripMenuItem.DataBindings">
      <summary>
            Gets the collection of data-binding objects for this IBindableComponent.
            </summary>
    </member>
    <member name="T:Gallio.UI.DataBinding.Observable`1">
      <summary>
            Wrapper for a field, that implements INotifyPropertyChanged.
            </summary>
      <typeparam name="T">The type to wrap.</typeparam>
    </member>
    <member name="M:Gallio.UI.DataBinding.Observable`1.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Gallio.UI.DataBinding.Observable`1.#ctor(`0)">
      <summary>
            Constructor initializing field.
            </summary>
      <param name="value">The initial value to wrap.</param>
    </member>
    <member name="M:Gallio.UI.DataBinding.Observable`1.op_Implicit(Gallio.UI.DataBinding.Observable{`0})~`0">
      <summary>
            Implicit operator allowing use of value.
            </summary>
      <param name="val">
      </param>
      <returns>
      </returns>
    </member>
    <member name="E:Gallio.UI.DataBinding.Observable`1.PropertyChanged">
      <summary>
            Event fired when the value changes.
            </summary>
    </member>
    <member name="P:Gallio.UI.DataBinding.Observable`1.Value">
      <summary>
            The value being wrapped.
            </summary>
    </member>
    <member name="T:Gallio.UI.ErrorReporting.ErrorDialog">
      <summary>
            Presents an error dialog consisting of a title, a message and a detailed message.
            </summary>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialog.#ctor">
      <summary>
            Creates the dialog.
            </summary>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialog.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:Gallio.UI.ErrorReporting.ErrorDialog.ErrorDetails">
      <summary>
            Gets or sets the error details.
            </summary>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:Gallio.UI.ErrorReporting.ErrorDialog.ErrorDetailsVisible">
      <summary>
            Gets or sets whether the error details panel is visible.
            </summary>
    </member>
    <member name="P:Gallio.UI.ErrorReporting.ErrorDialog.ErrorMessage">
      <summary>
            Gets or sets the error message.
            </summary>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:Gallio.UI.ErrorReporting.ErrorDialog.ErrorTitle">
      <summary>
            Gets or sets the error title.
            </summary>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialog.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.String)">
      <summary>
            Shows the error dialog.
            </summary>
      <param name="owner">The owner window, or null if none.</param>
      <param name="errorTitle">The error title.</param>
      <param name="errorMessage">The error message.</param>
      <param name="errorDetails">The error details.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="errorTitle" />,
            <paramref name="errorMessage" /> or <paramref name="errorDetails" /> is null.</exception>
    </member>
    <member name="T:Gallio.UI.ErrorReporting.ErrorDialogUnhandledExceptionHandler">
      <summary>
            Installs an unhandled exception handler that displays an error dialog.
            </summary>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialogUnhandledExceptionHandler.Install(System.Windows.Forms.Form)">
      <summary>
            Installs the handler.
            </summary>
      <param name="owner">The owner window.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="owner" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">Thrown if there is already a handler installed for a different owner.</exception>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialogUnhandledExceptionHandler.RunApplicationWithHandler(System.Windows.Forms.Form)">
      <summary>
            Runs an application 
            </summary>
      <param name="mainForm">The main form.</param>
    </member>
    <member name="M:Gallio.UI.ErrorReporting.ErrorDialogUnhandledExceptionHandler.Uninstall">
      <summary>
            Uninstalls the handler.
            </summary>
    </member>
    <member name="T:Gallio.UI.Menus.MenuCommand">
      <summary>
            Wraps an <see cref="T:Gallio.UI.ProgressMonitoring.ICommand">ICommand</see> and provides
            hints for the UI.
            </summary>
    </member>
    <member name="M:Gallio.UI.Menus.MenuCommand.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="P:Gallio.UI.Menus.MenuCommand.CanExecute">
      <summary>
            Whether the command can currently be executed, or not.
            </summary>
    </member>
    <member name="P:Gallio.UI.Menus.MenuCommand.Command">
      <summary>
            The command that will be executed.
            </summary>
    </member>
    <member name="P:Gallio.UI.Menus.MenuCommand.Shortcut">
      <summary>
             The shortcut to use for the command.
            </summary>
    </member>
    <member name="P:Gallio.UI.Menus.MenuCommand.Text">
      <summary>
            The text description of the command.
            </summary>
    </member>
    <member name="T:Gallio.UI.ProgressMonitoring.ICommand">
      <summary>
            Command pattern.
            </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ICommand.Execute(Gallio.Runtime.ProgressMonitoring.IProgressMonitor)">
      <summary>
            Run a task (with progress information).
            </summary>
      <param name="progressMonitor">The progress monitor.</param>
    </member>
    <member name="T:Gallio.UI.ProgressMonitoring.ITaskManager">
      <summary>
             A task manager for UI applications.
            </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ITaskManager.BackgroundTask(Gallio.Common.Action)">
      <summary>
             Run a task as a background action (uses ThreadPool). 
             No progress information will be displayed.
            </summary>
      <param name="action">The action to perform.</param>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ITaskManager.ClearQueue">
      <summary>
             Empty the queue of tasks.
            </summary>
    </member>
    <member name="P:Gallio.UI.ProgressMonitoring.ITaskManager.ProgressMonitor">
      <summary>
             The underlying progress monitor for the running task.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.ITaskManager.ProgressUpdate">
      <summary>
             Event fired when a progress update is received from a running task.
            </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ITaskManager.QueueTask(Gallio.UI.ProgressMonitoring.ICommand)">
      <summary>
             Add a task to the queue. If nothing is in the queue or 
             running, then the task will be executed.
            </summary>
      <param name="command">The command to queue.</param>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.ITaskManager.TaskCanceled">
      <summary>
             Event fired if a task is canceled.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.ITaskManager.TaskCompleted">
      <summary>
             Event fired when a task completes.
            </summary>
    </member>
    <member name="P:Gallio.UI.ProgressMonitoring.ITaskManager.TaskRunning">
      <summary>
             Returns true if a task is currently underway.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.ITaskManager.TaskStarted">
      <summary>
             Event fired when a task starts.
            </summary>
    </member>
    <member name="T:Gallio.UI.ProgressMonitoring.ProgressMonitorDialog">
      <summary>
             Progress dialog.
            </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ProgressMonitorDialog.#ctor(Gallio.Runtime.ProgressMonitoring.ObservableProgressMonitor)">
      <summary>
             Default constructor.
            </summary>
      <param name="progressMonitor">The progress monitor to display information for.</param>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ProgressMonitorDialog.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.ProgressMonitorDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)"></member>
    <member name="M:Gallio.UI.ProgressMonitoring.ProgressMonitorDialog.OnLoad(System.EventArgs)">
      <summary>
                    Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.
                </summary>
      <param name="e">
                    An <see cref="T:System.EventArgs" /> that contains the event data. 
                </param>
    </member>
    <member name="T:Gallio.UI.ProgressMonitoring.TaskManager">
      <summary>
                    Supports all classes in the .NET Framework class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all classes in the .NET Framework; it is the root of the type hierarchy.
                </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.TaskManager.#ctor(Gallio.UI.Common.Policies.IUnhandledExceptionPolicy)">
      <summary>
             Default constructor.
            </summary>
      <param name="unhandledExceptionPolicy">An unhandled exception policy.</param>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.TaskManager.BackgroundTask(Gallio.Common.Action)">
      <summary>
             Run a task as a background action (uses ThreadPool). 
             No progress information will be displayed.
            </summary>
      <param name="action">The action to perform.</param>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.TaskManager.ClearQueue">
      <summary>
             Empty the queue of tasks.
            </summary>
    </member>
    <member name="P:Gallio.UI.ProgressMonitoring.TaskManager.ProgressMonitor">
      <summary>
             The underlying progress monitor for the running task.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.TaskManager.ProgressUpdate">
      <summary>
             Event fired when a progress update is received from a running task.
            </summary>
    </member>
    <member name="M:Gallio.UI.ProgressMonitoring.TaskManager.QueueTask(Gallio.UI.ProgressMonitoring.ICommand)">
      <summary>
             Add a task to the queue. If nothing is in the queue or 
             running, then the task will be executed.
            </summary>
      <param name="command">The command to queue.</param>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.TaskManager.TaskCanceled">
      <summary>
             Event fired if a task is canceled.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.TaskManager.TaskCompleted">
      <summary>
             Event fired when a task completes.
            </summary>
    </member>
    <member name="P:Gallio.UI.ProgressMonitoring.TaskManager.TaskRunning">
      <summary>
             Returns true if a task is currently underway.
            </summary>
    </member>
    <member name="E:Gallio.UI.ProgressMonitoring.TaskManager.TaskStarted">
      <summary>
             Event fired when a task starts.
            </summary>
    </member>
    <member name="T:Gallio.UI.Reports.TestStepRunViewer">
      <summary>
        <para>
            Displays a summary of a set of test step runs.
            </para>
        <para>
            This control is optimized to display individual test run results to the user on
            demand more quickly than could be done if we had to show the whole report at once.
            </para>
      </summary>
    </member>
    <member name="M:Gallio.UI.Reports.TestStepRunViewer.#ctor">
      <summary>
            Creates a test step run viewer.
            </summary>
    </member>
    <member name="M:Gallio.UI.Reports.TestStepRunViewer.Clear">
      <summary>
            Clears the contents of the report viewer and discards all cached content.
            </summary>
    </member>
    <member name="M:Gallio.UI.Reports.TestStepRunViewer.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:Gallio.UI.Reports.TestStepRunViewer.Show(System.Collections.Generic.ICollection{Gallio.Runner.Reports.Schema.TestStepRun})">
      <summary>
            Displays information about a set of test step run.
            </summary>
      <param name="testStepRuns">The test step runs.</param>
    </member>
    <member name="M:Gallio.UI.Reports.TestStepRunViewer.Show(System.Collections.Generic.ICollection{Gallio.Runner.Reports.Schema.TestStepRun},Gallio.Model.Schema.TestModelData)">
      <summary>
            Displays information about a set of test step runs, using additional
            information from the test model when available.
            </summary>
      <param name="testStepRuns">The test step runs.</param>
      <param name="testModelData">The test model data, or null if not available.</param>
    </member>
  </members>
</doc>